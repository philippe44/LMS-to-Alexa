/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.4 at Sat Nov 21 19:39:31 2015. */

#ifndef PB_CASTMESSAGE_PB_H_INCLUDED
#define PB_CASTMESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _CastMessage_ProtocolVersion {
    CastMessage_ProtocolVersion_CASTV2_1_0 = 0
} CastMessage_ProtocolVersion;

typedef enum _CastMessage_PayloadType {
    CastMessage_PayloadType_STRING = 0,
    CastMessage_PayloadType_BINARY = 1
} CastMessage_PayloadType;

typedef enum _AuthError_ErrorType {
    AuthError_ErrorType_INTERNAL_ERROR = 0,
    AuthError_ErrorType_NO_TLS = 1
} AuthError_ErrorType;

/* Struct definitions */
typedef struct _AuthChallenge {
    uint8_t dummy_field;
} AuthChallenge;

typedef struct _AuthResponse {
    pb_callback_t signature;
    pb_callback_t client_auth_certificate;
    pb_callback_t client_ca;
} AuthResponse;

typedef struct _AuthError {
    AuthError_ErrorType error_type;
} AuthError;

typedef struct _CastMessage {
    CastMessage_ProtocolVersion protocol_version;
    char source_id[128];
    char destination_id[128];
    char namespace[128];
    CastMessage_PayloadType payload_type;
    bool has_payload_utf8;
    char payload_utf8[2048];
    pb_callback_t payload_binary;
} CastMessage;

typedef struct _DeviceAuthMessage {
    bool has_challenge;
    AuthChallenge challenge;
    bool has_response;
    AuthResponse response;
    bool has_error;
    AuthError error;
} DeviceAuthMessage;

/* Default values for struct fields */
extern const CastMessage_ProtocolVersion CastMessage_protocol_version_default;
extern const char CastMessage_source_id_default[128];
extern const char CastMessage_destination_id_default[128];
extern const CastMessage_PayloadType CastMessage_payload_type_default;

/* Initializer values for message structs */
#define CastMessage_init_default                 {CastMessage_ProtocolVersion_CASTV2_1_0, "sender-0", "receiver-0", "", CastMessage_PayloadType_STRING, false, "", {{NULL}, NULL}}
#define AuthChallenge_init_default               {0}
#define AuthResponse_init_default                {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define AuthError_init_default                   {(AuthError_ErrorType)0}
#define DeviceAuthMessage_init_default           {false, AuthChallenge_init_default, false, AuthResponse_init_default, false, AuthError_init_default}
#define CastMessage_init_zero                    {(CastMessage_ProtocolVersion)0, "", "", "", (CastMessage_PayloadType)0, false, "", {{NULL}, NULL}}
#define AuthChallenge_init_zero                  {0}
#define AuthResponse_init_zero                   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define AuthError_init_zero                      {(AuthError_ErrorType)0}
#define DeviceAuthMessage_init_zero              {false, AuthChallenge_init_zero, false, AuthResponse_init_zero, false, AuthError_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define AuthResponse_signature_tag               1
#define AuthResponse_client_auth_certificate_tag 2
#define AuthResponse_client_ca_tag               3
#define AuthError_error_type_tag                 1
#define CastMessage_protocol_version_tag         1
#define CastMessage_source_id_tag                2
#define CastMessage_destination_id_tag           3
#define CastMessage_namespace_tag                4
#define CastMessage_payload_type_tag             5
#define CastMessage_payload_utf8_tag             6
#define CastMessage_payload_binary_tag           7
#define DeviceAuthMessage_challenge_tag          1
#define DeviceAuthMessage_response_tag           2
#define DeviceAuthMessage_error_tag              3

/* Struct field encoding specification for nanopb */
extern const pb_field_t CastMessage_fields[8];
extern const pb_field_t AuthChallenge_fields[1];
extern const pb_field_t AuthResponse_fields[4];
extern const pb_field_t AuthError_fields[2];
extern const pb_field_t DeviceAuthMessage_fields[4];

/* Maximum encoded size of messages (where known) */
#define AuthChallenge_size                       0
#define AuthError_size                           2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CASTMESSAGE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
